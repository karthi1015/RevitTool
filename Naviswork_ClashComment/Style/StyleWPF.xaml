<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <SolidColorBrush x:Key="foreground" Color="White"/>

    <Style TargetType="{x:Type Window}" x:Key="CustomWindowStyle">
        <Setter Property="BorderBrush" Value="#FF004363"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        <Setter Property="WindowStyle" Value="None"/>
    </Style>

    <!--Backgroud thanh Tasbar!-->
    <SolidColorBrush x:Key="Tasbar" Color="#FF39454B"/>

    <!--Backgroud toàn bộ giao diện!-->
    <SolidColorBrush x:Key="Main" Color="#FF4A555B"/>

    <!--Style của Grid thanh Tasbar-->
    <Style TargetType="Grid" x:Key="tasbar">
        <Setter Property="Background" Value="{StaticResource Tasbar}"/>
    </Style>

    <!--Style của Grid Main-->
    <Style TargetType="Grid" x:Key="main">
        <Setter Property="Background" Value="{StaticResource Main}"/>
    </Style>

    <!--Style của ListView Main-->
    <Style TargetType="ListView" x:Key="BaseOnListView">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <!--Style của ListViewItem Main-->
    <Style TargetType="ListViewItem" x:Key="BaseOnListViewItem">
        <Setter Property="ToolTip" Value="{Binding preview}"/>
        <Setter Property="IsEnabled" Value="{Binding isEnabled}"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Foreground" Value="White"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsMouseOver"  Value="True">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Style của ListViewItem Main-->
    <!--<Style TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="Orange"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>-->
    <Style TargetType="GridViewColumnHeader" x:Key="BaseOnGridView">
        <Setter Property="Padding" Value="5 0 0 0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="TextBlock.FontWeight" Value="Medium" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="Orange"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <DockPanel>
                        <Border x:Name="HeaderBorder"
                                Padding="{TemplateBinding Padding}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter x:Name="HeaderContent"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <Thumb 
                            x:Name="PART_HeaderGripper"
                            HorizontalAlignment="Right"/>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Orange" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role" Value="Floating">
                <Setter Property="Opacity" Value="0.7" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <DockPanel Name="PART_FloatingHeaderCanvas">
                                <Border BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="1" />
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role" Value="Padding">
                <Setter Property="Opacity" Value="0.7" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Canvas Name="PART_FloatingHeaderCanvas" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Style của TreeView Main-->
    <Style TargetType="TreeView">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <!--Style của TreeViewItem Main-->
    <Style TargetType="TreeViewItem">
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!--Style của Label Main-->
    <Style TargetType="Label">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <!--Style của TextBox Main-->
    <Style TargetType="TextBox">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="White"/>
    </Style>

    <!--Style của ComboBox Main-->
    <Style TargetType="ComboBox">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="Background" Value="{StaticResource Main}"/>
    </Style>

    <!--Style của ComboBoxItem Main-->
    <Style TargetType="ComboBoxItem">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{StaticResource Main}"/>
        <Setter Property="Foreground" Value="White"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsMouseOver"  Value="True">
                <Setter Property="Background" Value="{StaticResource Main}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Style của RadioButton Main-->
    <Style TargetType="RadioButton">
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!--Style của CheckBox Main-->
    <Style TargetType="CheckBox">
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!--Style của Expander Main-->
    <Style TargetType="Expander">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <!--Style của ProgressBar Main-->
    <Style TargetType="ProgressBar">
        <Setter Property="Foreground" Value="LawnGreen"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <!--Style của PasswordBox Main-->
    <Style TargetType="PasswordBox">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="White"/>
    </Style>

    <!--Style của Button Main-->
    <Style TargetType="Button">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="{StaticResource Tasbar}"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="Opacity" Value="20"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Background" Value="{StaticResource Tasbar}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="TabButtonFirst">
        <Setter Property="TextBlock.TextAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="3,3,3,3" Background="{StaticResource Tasbar}" BorderBrush="Aqua" BorderThickness="1,1,1,1" >
                        <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"  Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border CornerRadius="3,3,3,3" Background="#FF879197" BorderBrush="Aqua" BorderThickness="1,1,1,1" >
                                <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Style của Image Main-->
    <Style TargetType="Image">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>